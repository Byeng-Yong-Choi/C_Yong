Texture2D		g_txDiffuseA : register(t0);
Texture2D		g_txDiffuseB : register(t1);
SamplerState	g_Sample0 : register(s0);

struct PS_IN
{
	float4 p : SV_POSITION;
	float4 c : COLOR0;
	float2 t : TEXCOORDO;
	float time : TEXCOORD1;
};

struct PS_OUT
{
	float4 add : SV_TARGET0;
	float4 mul : SV_TARGET1;
};

PS_OUT PS(PS_IN vsdata)
{
	PS_OUT pout;
	float4 FinalA = g_txDiffuseA.Sample(g_Sample0, vsdata.t);

	pout.add = FinalA;
	return pout;
}

PS_OUT PSBlend(PS_IN vsdata)
{
	PS_OUT pout;
	float4 FinalA = g_txDiffuseA.Sample(g_Sample0, vsdata.t);
	float4 FinalB = g_txDiffuseB.Sample(g_Sample0, vsdata.t);
	float alpha=(FinalA.r+FinalA.g+FinalA.b)/3;
	pout.mul=float4(1-alpha,1-alpha,1-alpha,alpha);
	pout.add=lerp(FinalA,FinalB,vsdata.time);
	return pout;
}

PS_OUT PSBlend2(PS_IN vsdata)
{
	PS_OUT pout;
	float4 FinalA = g_txDiffuseA.Sample(g_Sample0, vsdata.t);
	float4 FinalB = g_txDiffuseB.Sample(g_Sample0, vsdata.t);
	float alpha = (FinalA.r+FinalA.g+FinalA.b)/3; //+ vFinalB.r + vFinalB.g + vFinalB.b)/6;

	//pout.mul= float4(1-alpha,1-alpha,1-alpha,alpha);
	pout.add= FinalA;//lerp(FinalA,FinalB,vsdata.time);
	return pout;
}

struct VS_OUT
{
	float4 p : SV_POSITION;
	float4 c : COLOR0;
	float2 t : TEXCOORDO;
	float time : TEXCOORD1;
};

struct VS_IN
{
	float3 p : POINT;
	float4 c : COLOR;
	float2 t : TEXT;
};

cbuffer m_ConData : register(b0)
{
	float4x4 g_matWorld : packoffset(c0);
	float4x4 g_matView : packoffset(c4);
	float4x4 g_matProj : packoffset(c8);
	float4 time : packoffset(c12);

};

VS_OUT VS(VS_IN data)
{
	VS_OUT vout;
	vout.p = float4(data.p, 1.0f);
	vout.c = data.c;
	vout.t = data.t;
	return vout;
}

VS_OUT VSmat(VS_IN data)
{
	VS_OUT vout;
	float4 vLocal = float4(data.p, 1.0f);
	float4 vWorld = mul(vLocal, g_matWorld);
	float4 vView = mul(vWorld, g_matView);
	float4 vProj = mul(vView, g_matProj);
	vout.p = vProj;
	vout.c = data.c;
	vout.t = data.t;
	vout.time=time.x;
	return vout;
}

